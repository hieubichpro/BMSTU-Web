error_log  /var/log/nginx/error.log notice;

events {
    worker_connections 1024;
}

http {
    # server_tokens off;
    # add_header Server "MyLeagues"; 
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=default_cache:10m max_size=2g;
    # upstream backend
    # {
    #     server host.docker.internal:8081 weight=2;
    #     server host.docker.internal:8082 weight=1;
    #     server host.docker.internal:8083 weight=1;
    # }

    upstream main_backend
    {
        server host.docker.internal:8081;
    }

    # upstream mirror_backend
    # {
    #     server host.docker.internal:8084;
    # }

    map $request_method $upstream_location
    {
        # GET backend;
        default main_backend;
    }

	# map $request_uri $mirror_uri { # /api/v1/statistics -> /statistics
	# 	default $request_uri;
	# }
    # map $request_uri $api_uri {
    #     ~^/api/v1(.*)$ $1;
    # }
    more_clear_headers Server;
    more_set_headers 'Server: MyLeagues';

    server {
        listen 80;
        listen [::]:80;

        gzip on;
        gzip_comp_level 5;
        gzip_disable "msie6";
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        proxy_cache default_cache;
        proxy_cache_methods GET;
        proxy_cache_min_uses 2;
        proxy_cache_valid 15m;

        location /api/v1/ {
            proxy_no_cache 1;
            # return 301 'http://localhost:8080/swagger/';
            proxy_pass http://$upstream_location;
        }

        location = /api/v1/ {
            # return http://host.docker.internal:8081/swagger/;
            return http://localhost:8081/swagger/;
            # proxy_pass 'http://main_backend/swagger/';
            # proxy_pass http://main_backend/swagger/;
        }

        location /status {
            stub_status;
        }

        location /admin {
            return http://localhost:5050/;
        }

        location /documentation {
            alias /static/;
            try_files $uri /readme.html;
        }

        location /documentation/README.md {
            root /static/;
            index README.md;
            charset UTF-8;
            add_header content-type "text/markdown; charset=utf-8";
        }

        location /documentation/img/ {
            root /static/;
        }

        location / {
            root /static;
            index index.html;
        }

        location /test {
            root /static/;
            try_files $uri /index.html;
        }

        # location /mirror/{
        #     proxy_no_cache 1;
        #     proxy_pass 'http://mirror_backend/';
        # }




        # location /a/b/c/{
        #     proxy_pass 'http://mirror_backend/';
        # }
    }
}
        # location /swagger/ {
        #     proxy_pass http://host.docker.internal:8080/swagger/;
        # }

        # location /api/ {
        #     proxy_pass http://host.docker.internal:8080/api/;
        # }

        # location /api/v1/ {
        #     proxy_pass http://host.docker.internal:8080/api/;
        # }

# / косая черта очень важно.
# с ним будет сбрасывается часть location
# без него НЕ будет сбрасывается часть location